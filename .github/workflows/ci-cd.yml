name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend-tests-build:
    name: Backend - test & build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run backend tests
        working-directory: ./backend
        run: npm run test

      - name: Build backend
        working-directory: ./backend
        run: npm run build

  frontend-build:
    name: Frontend - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

  docker-build-and-push:
    name: Build & Push Docker images
    runs-on: ubuntu-latest
    needs: [backend-tests-build, frontend-build]
    steps:
      - uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/vehicle-management-backend:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/vehicle-management-backend:${{ github.sha }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/vehicle-management-frontend:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/vehicle-management-frontend:${{ github.sha }}

  deploy:
    name: Deploy to VPS via SSH
    runs-on: ubuntu-latest
    needs: docker-build-and-push
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy via SSH (docker-compose pull & up)
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          # Support both key-based and password-based auth. Provide either SSH_PRIVATE_KEY or SSH_PASSWORD as repo secret.
          #   key: ${{ secrets.SSH_PRIVATE_KEY }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -e
            # go to path containing docker-compose.yml on the server
            cd ${DEPLOY_PATH:-$HOME} || exit 1
            # pull new images and recreate services
            docker-compose pull || true
            docker-compose up -d --remove-orphans

# Secrets required (set these in repository Settings > Secrets):
# DOCKERHUB_USERNAME, DOCKERHUB_TOKEN
# SSH_HOST, SSH_USER, SSH_PRIVATE_KEY, SSH_PORT (optional)
# On the VPS, have a docker-compose.yml in DEPLOY_PATH that references the images pushed above
