openapi: 3.0.3
info:
  title: Vehicle Management API
  version: 1.0.0
  description: API documentation for Vehicle Management System
servers:
  - url: /api
paths:
  /auth/login:
    post:
      summary: Login a user and return access & refresh tokens
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
  /users:
    get:
      summary: List users
      tags:
        - Users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: User created
  /users/{id}:
    get:
      summary: Get user by id
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update user by id
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: User updated
    delete:
      summary: Delete user by id
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted
  /vehicles:
    get:
      summary: List vehicles
      tags:
        - Vehicles
      responses:
        '200':
          description: A list of vehicles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vehicle'
  /vehicles/{id}:
    get:
      summary: Get vehicle detail
      tags:
        - Vehicles
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Vehicle found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
  /reports/trips.xlsx:
    get:
      summary: Generate XLSX report from trips
      tags:
        - Reports
      responses:
        '200':
          description: XLSX file
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
    UserCreate:
      type: object
      required:
        - email
        - password
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
    UserUpdate:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
    Vehicle:
      type: object
      properties:
        id:
          type: string
        plate:
          type: string
        model:
          type: string
        year:
          type: integer
